import "../makefile-utils.stg"

directives(component) ::=
<<
# deps for <component.printname>
<component.prereqs:{prereq| component.<component.name>: component.<prereq> }; separator="\n">


>>


maintenancedirective(type, prereq) ::=
<<
<type> : $(patsubst %,synthesized.<type>.%, $(COMPONENTS))

synthesized.<type>.%: <prereq>
	cd ${lookup.$(patsubst synthesized.<type>.%,%,$@)} && $(MAKE) -f Makefile <type>

>>

toplevelmk(version, date, config, components) ::=
<<
<makeheader(version, date)>

TOPLEVEL = $(shell dirname $(CURDIR)/$(word 1,$(MAKEFILE_LIST)))
export TOPLEVEL

#
# Component definitions:  Add/Remove items from list to include/exclude from
# the build
#
<components.values:{x | COMPONENTS += component.<x.name> }; separator="\n">

#
# Component name->path map
#
<components.values:{x | lookup.component.<x.name> := <x.path> }; separator="\n">

all:     $(COMPONENTS)
clean:   clean-toplevel

.PHONY: clean-toplevel
clean-toplevel:
	@echo "Cleaning toplevel"
	@-rm -f *~
	@-rm -rf bin

<maintenancedirective("install", "%")>
<maintenancedirective("clean", "")>

#
# Component prerequistite definitions
#

<components.values:{component | <if(component.prereqs)><directives(component)><endif>}>

component.%:
	@echo "Building $@"
	cd ${lookup.${@}}; $(MAKE) -f Makefile

>>
